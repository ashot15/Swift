import Foundation

class Matrix {
    var values: [[Double]]

    init(values: [[Double]]) {
        self.values = values
    }

    // Сложение матриц
    func add(_ other: Matrix) -> Matrix? {
        guard self.values.count == other.values.count,
              self.values[0].count == other.values[0].count else {
            print("Размеры матриц не совпадают для сложения.")
            return nil
        }

        var result = [[Double]](repeating: [Double](repeating: 0.0, count: self.values[0].count), count: self.values.count)

        for i in 0..<self.values.count {
            for j in 0..<self.values[i].count {
                result[i][j] = self.values[i][j] + other.values[i][j]
            }
        }

        return Matrix(values: result)
    }

    // Умножение матриц
    func multiply(_ other: Matrix) -> Matrix? {
        guard self.values[0].count == other.values.count else {
            print("Количество столбцов первой матрицы должно совпадать с количеством строк второй матрицы.")
            return nil
        }

        var result = [[Double]](repeating: [Double](repeating: 0.0, count: other.values[0].count), count: self.values.count)

        for i in 0..<self.values.count {
            for j in 0..<other.values[0].count {
                for k in 0..<self.values[0].count {
                    result[i][j] += self.values[i][k] * other.values[k][j]
                }
            }
        }

        return Matrix(values: result)
    }

    // Печать матрицы
    func printMatrix() {
        for row in values {
            print(row.map { String(format: "%.2f", $0) }.joined(separator: "\t"))
        }
    }
}

// Функция для ввода матрицы с проверкой ввода
func inputMatrix() -> Matrix {
    var rows = 0
    var columns = 0

    // Ввод количества строк
    while true {
        print("Введите количество строк:")
        if let input = readLine(), let r = Int(input), r > 0 {
            rows = r
            break
        } else {
            print("Некорректное количество строк. Попробуйте еще раз.")
        }
    }

    // Ввод количества столбцов
    while true {
        print("Введите количество столбцов:")
        if let input = readLine(), let c = Int(input), c > 0 {
            columns = c
            break
        } else {
            print("Некорректное количество столбцов. Попробуйте еще раз.")
        }
    }

    var values = [[Double]]()

    // Ввод строк матрицы
    for i in 0..<rows {
        while true {
            print("Введите элементы строки \(i + 1), разделенные пробелами:")
            if let line = readLine() {
                let row = line.split(separator: " ").compactMap { Double($0) }
                
                if row.count == columns {
                    values.append(row)
                    break
                } else {
                    print("Некорректное количество элементов в строке. Попробуйте еще раз.")
                }
            } else {
                print("Ошибка ввода. Попробуйте еще раз.")
            }
        }
    }

    return Matrix(values: values)
}

// Пример использования
print("Введите первую матрицу:")
let matrixA = inputMatrix()

print("Введите вторую матрицу:")
let matrixB = inputMatrix()

if let sum = matrixA.add(matrixB) {
    print("Сумма матриц:")
    sum.printMatrix()
}

if let product = matrixA.multiply(matrixB) {
    print("Произведение матриц:")
    product.printMatrix()
}
